@page "/mapEditor"
@inject Bee bee
@inject PlayingArea playingArea
@inject Map map
@inject ControllerMap controllerMap

<div class="nadpis p-2 m-3 border border-dark rounded border-3">
	Uprav mapu
</div>
<div class="container pozadie border border-dark rounded border-3">
	<div class="row">

		@*Mapa*@
		<div class="col-12 col-xl-8">

			@*Zmena popisu*@
			<div class="col-12 panel">
				<div class="card m-3 border border-3 border-dark">
					<div class="card-body">
						<EditForm Model="@this.map">
							<label class="d-flex justify-content-center mb-1">Popis mapy</label>
							<InputText id="name" class="form-control" @bind-Value="this.map.Description" />
							<button type="submit" class="btn btn-dark btn-outline-warning mt-2">Zmen popis mapy</button>
						</EditForm>
					</div>
				</div>
			</div>

			@*Nastavenia mapy*@
			<div class="col-12 panel">
				<div class="card m-3 border border-3 border-dark">
					<div class="card-body">
						<div class="row  p-1">
							<div class="col-4 col-xl-2 p-2 border border-2 border-dark">
								<p>Nova mapa</p>
								<button class="btn btn-dark btn-outline-warning" @onclick="() => this.controllerMap.NewMap()">
									<i class="bi bi-file-earmark-plus"></i>
								</button>
							</div>
							<div class="col-4 col-xl-2 p-2 border border-2 border-dark">
								<p>Ulož mapu</p>
								<button class="btn btn-dark btn-outline-warning" @onclick="DownloadMap">
									<i class="bi bi-download"></i>
								</button>
							</div>
							<div class="col-4 col-xl-2 p-2 border border-2 border-dark">
								<p>Zmaž plochu</p>
								<button class="btn btn-dark btn-outline-warning" @onclick="() => this.controllerMap.DeletePlayArea()">
									<i class="bi bi-trash"></i>
								</button>
							</div>
							<div class="col-6 col-xl-3 p-2 border border-2 border-dark">
								<p>Šírka mapy: @map.SizeX</p>
								<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.IncreaseX()">
									<i class="bi bi-plus-lg"></i>
								</button>
								<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.DecreaseX()">
									<i class="bi bi-dash"></i>
								</button>
							</div>
							<div class="col-6 col-xl-3 p-2 border border-2 border-dark">
								<p>Výška mapy: @map.SizeY</p>
								<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.IncreaseY()">
									<i class="bi bi-plus-lg"></i>
								</button>
								<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.DecreaseY()">
									<i class="bi bi-dash"></i>
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="row d-flex justify-content-center m-3">
				<BeeBotMap />
			</div>
		</div>

		@*Edit mapy*@
		<div class="col-xl-4 panel">

			@*Zmena mena*@
			<div class="card m-3 border border-3 border-dark">
				<div class="card-body">
					<EditForm Model="@this.map">
						<label class="d-flex justify-content-center mb-1">Názov mapy</label>
						<InputText id="name" class="form-control" @bind-Value="this.map.Name" />
						<button type="submit" class="btn btn-dark btn-outline-warning mt-2">Zmen nazov mapy</button>
					</EditForm>
				</div>
			</div>

			@*Zmena mapy*@
			<MapChange />

			@*Zmena obrazkov mapy*@
			<div class="card m-3 border border-3 border-dark">
				<div class="card-body">
					<p>Vyber kliknutím na obrázok a pridaj na mapu:</p>

					<ImageChange Description="Prekážka" Type="BlockType.BARRIER" />

					<ImageChange Description="Cieľ" Type="BlockType.FINISH" />

					<ImageChange Description="Hracie pole" Type="BlockType.RECTANGLE" />

					<ImageChange Description="Odmena" Type="BlockType.REWARD" />

				</div>
			</div>

		</div>
	</div>
</div>

@code
{
	public bool SuccessDownload { get; set; }
	[Inject] IBlazorDownloadFileService BlazorDownloadFileService { get; set; }

	#region Overrides of ComponentBase

	protected override void OnInitialized()
	{
		base.OnInitialized();
		this.controllerMap.OnChange += this.StateHasChanged;
		this.bee.Reset();
		this.playingArea.Mode = Mode.Editing;
	}

	#endregion

	async Task DownloadMap()
	{
		string jsonMap = JsonSerializer.Serialize(this.controllerMap.SaveMap());
		var bytes = Encoding.ASCII.GetBytes(jsonMap);
		var task = await BlazorDownloadFileService.DownloadFile(this.map.Name + ".map", bytes, CancellationToken.None, "application/octet-stream");
		if (task.Succeeded)
		{
			this.SuccessDownload = true;
		}
		else
		{
			this.SuccessDownload = false;
		}
	}
}
