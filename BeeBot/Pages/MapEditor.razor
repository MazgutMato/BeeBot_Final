@page "/mapEditor"
@inject Bee bee
@inject PlayingArea playingArea
@inject Map map
@inject ControllerMap controllerMap

<div class="nadpis p-2 m-3 border border-dark rounded border-3">
	Uprav mapu
</div>
<div class="container pozadie border border-dark rounded border-3">
	<div class="row">

		@*Mapa*@
		<div class="col-12 col-xl-8">

			@*Zmena popisu*@
			<div class="col-12 panel">
				<div class="card m-3 border border-3 border-dark">
					<div class="card-body">
						<EditForm Model="@this.map">
							<label class="d-flex justify-content-center mb-1">Popis mapy</label>
							<InputText id="name" class="form-control" @bind-Value="this.map.Description" />
							<button type="submit" class="btn btn-dark btn-outline-warning mt-2">Zmen popis mapy</button>
						</EditForm>
					</div>
				</div>
			</div>

			@*Nastavenia mapy*@
			<div class="col-12 panel">
				<div class="card m-3 border border-3 border-dark">
					<div class="card-body">
						<div class="row  p-1">
							<div class="row">
								<div class="col-2">
									<p>Nova mapa</p>
									<button class="btn btn-dark btn-outline-warning" @onclick="() => this.controllerMap.newMap()">
										<i class="bi bi-file-earmark-plus"></i>
									</button>
								</div>
								<div class="col-2">
									<p>Ulož mapu</p>
									<button class="btn btn-dark btn-outline-warning" @onclick="DownloadMap">
										<i class="bi bi-download"></i>
									</button>
								</div>
								<div class="col-2">
									<p>Zmaž plochu</p>
									<button class="btn btn-dark btn-outline-warning" @onclick="() => this.controllerMap.deletePlayArea()">
										<i class="bi bi-trash"></i>
									</button>
								</div>
								<div class="col-3">
									<p>Šírka mapy: @map.sizeX</p>
									<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.increaseX()">
										<i class="bi bi-plus-lg"></i>
									</button>
									<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.decreaseX()">
										<i class="bi bi-dash"></i>
									</button>
								</div>
								<div class="col-3">
									<p>Výška mapy: @map.sizeY</p>
									<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.increaseY()">
										<i class="bi bi-plus-lg"></i>
									</button>
									<button class="btn btn-dark btn-outline-warning" @onclick="() => controllerMap.decreaseY()">
										<i class="bi bi-dash"></i>
									</button>
								</div>									
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="row d-flex justify-content-center m-3">
				<BeeBotMap/>
			</div>
		</div>

		@*Edit mapy*@
		<div class="col-xl-4 panel">

			@*Zmena mena*@
			<div class="card m-3 border border-3 border-dark">
				<div class="card-body">
					<EditForm Model="@this.map">
						<label class="d-flex justify-content-center mb-1">Názov mapy</label>
						<InputText id="name" class="form-control" @bind-Value="this.map.Name" />
						<button type="submit" class="btn btn-dark btn-outline-warning mt-2">Zmen nazov mapy</button>
					</EditForm>
				</div>
			</div>

			@*Zmena mapy*@
			<MapChange />

			<div class="card m-3 border border-3 border-dark">
				<div class="card-body">
					<p>Vyber kliknutím na obrázok a pridaj na mapu:</p>

					<div class="row p-2 m-1 border border-dark rounded border-3">	
						<p>Prekazka</p>
						<div class="col-6">							
							<svg viewBox="0 0 120 120" style="width: auto; height: auto; max-width: 100%; max-height: 30vh">
								<rect x="5" y="5" width="110" height="110" style="stroke: black; stroke-width:
											@(this.controllerMap.BlockEditor == BlockType.Barrier ? "5px" : "1px");
											opacity: 1; fill: none" vector-effect="non-scaling-stroke" />
								<image href="@(this.map.BarrierFile == "" ? "/images/defaultMap/barrier.svg" :  this.map.BarrierFile)"
									   x="10"
									   y="10"
									   height="100"
									   width="100"
									   @onclick="() => controllerMap.BlockEditor = BlockType.Barrier"></image>
							</svg>
						</div>
						<div class="col-6">
							<div class="col-12">
								<label>Zadaj link!</label>
								<input class="form-control" value="@this.map.BarrierFile" @onchange="@((ChangeEventArgs e) => this.controllerMap.changeFile(BlockType.Barrier,e?.Value?.ToString()))" />
								<button class="btn btn-dark btn-outline-warning mt-2">Zmeň obrázok</button>
								<button class="btn btn-dark btn-outline-warning mt-2" @onclick='() => this.controllerMap.changeFile(BlockType.Barrier,"")'><i class="bi bi-x-square"></i></button>
							</div>
						</div>
					</div>

					<div class="row p-2 m-1 border border-dark rounded border-3">
						<p>Ciel</p>
						<div class="col-6">
							<svg viewBox="0 0 120 120" style="width: auto; height: auto; max-width: 100%; max-height: 30vh">
								<rect x="5" y="5" width="110" height="110" style="stroke: black; stroke-width:
											@(this.controllerMap.BlockEditor == BlockType.Finish ? "5px" : "1px");
											opacity: 1; fill: none" vector-effect="non-scaling-stroke" />
								<image href="@(this.map.FinishFile == "" ? "/images/defaultMap/finish.svg" :  this.map.FinishFile)"
									   height="100"
									   width="100"
									   x="10"
									   y="10"
									   @onclick="() => controllerMap.BlockEditor = BlockType.Finish"></image>
							</svg>
						</div>
						<div class="col-6">
							<div class="col-12">
								<label>Zadaj link!</label>
								<input class="form-control" value="@this.map.FinishFile" @onchange="@((ChangeEventArgs e) => this.controllerMap.changeFile(BlockType.Finish,e?.Value?.ToString()))" />
								<button class="btn btn-dark btn-outline-warning mt-2">Zmeň obrázok</button>
								<button class="btn btn-dark btn-outline-warning mt-2" @onclick='() => this.controllerMap.changeFile(BlockType.Finish,"")'><i class="bi bi-x-square"></i></button>
							</div>
						</div>
					</div>

					<div class="row p-2 m-1 border border-dark rounded border-3">
						<p>Prázdne pole</p>
						<div class="col-6">
							<svg viewBox="0 0 120 120" style="width: auto; height: auto; max-width: 100%; max-height: 30vh">
								<rect x="5" y="5" width="110" height="110" style="stroke: black; stroke-width:
									@(this.controllerMap.BlockEditor == BlockType.None ? "5px" : "1px"); ;
									opacity: 1; fill: white" vector-effect="non-scaling-stroke"
									  @onclick="() => controllerMap.BlockEditor = BlockType.None" />
								<image href="@(this.map.RectangleFile == "" ? "/images/defaultMap/rectangle.svg" :  this.map.RectangleFile)"
									   height="100"
									   width="100"
									   x="10"
									   y="10"
									   @onclick="() => controllerMap.BlockEditor = BlockType.None"></image>
							</svg>
						</div>
						<div class="col-6">
							<div class="col-12">
								<label>Zadaj link!</label>
								<input class="form-control" value="@this.map.RectangleFile" @onchange="@((ChangeEventArgs e) => this.controllerMap.changeFile(BlockType.None,e?.Value?.ToString()))" />
								<button class="btn btn-dark btn-outline-warning mt-2">Zmeň obrázok</button>
								<button class="btn btn-dark btn-outline-warning mt-2" @onclick='() => this.controllerMap.changeFile(BlockType.None,"")'><i class="bi bi-x-square"></i></button>
							</div>
						</div>
					</div>

					<div class="row p-2 m-1 border border-dark rounded border-3">
						<p>Odmena</p>
						<div class="col-6">
							<svg viewBox="0 0 120 120" style="width: auto; height: auto; max-width: 100%; max-height: 30vh">
								<rect x="5" y="5" width="110" height="110" style="stroke: black; stroke-width:
											@(this.controllerMap.BlockEditor == BlockType.Reward ? "5px" : "1px");
											opacity: 1; fill: none" vector-effect="non-scaling-stroke" />
								<image href="@(this.map.RewardFile == "" ? "/images/defaultMap/reward.svg" :  this.map.RewardFile)"
									   height="100"
									   width="100"
									   x="10"
									   y="10"
									   @onclick="() => controllerMap.BlockEditor = BlockType.Reward"></image>
							</svg>
						</div>
						<div class="col-6">
							<div class="col-12">
								<label>Zadaj link!</label>
								<input class="form-control" value="@this.map.RewardFile" @onchange="@((ChangeEventArgs e) => this.controllerMap.changeFile(BlockType.Reward,e?.Value?.ToString()))" />
								<button class="btn btn-dark btn-outline-warning mt-2">Zmeň obrázok</button>
								<button class="btn btn-dark btn-outline-warning mt-2" @onclick='() => this.controllerMap.changeFile(BlockType.Reward,"")'><i class="bi bi-x-square"></i></button>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>

	</div>
</div>

@code
{
	public bool SuccessDownload { get; set; }
	[Inject] IBlazorDownloadFileService BlazorDownloadFileService { get; set; }
	#region Overrides of ComponentBase

	protected override void OnInitialized()
	{
		base.OnInitialized();
		this.controllerMap.OnChange += this.StateHasChanged;
		this.bee.Reset();
		this.playingArea.mode = Mode.Editing;
	}

	#endregion

	async Task DownloadMap()
	{
		string jsonMap = JsonSerializer.Serialize(this.controllerMap.saveMap());
		var bytes = Encoding.ASCII.GetBytes(jsonMap);
		var task = await BlazorDownloadFileService.DownloadFile(this.map.Name + ".map", bytes,CancellationToken.None,"application/octet-stream");
		if (task.Succeeded)
		{
			this.SuccessDownload = true;
		}
		else
		{
			this.SuccessDownload = false;
		}
	}
}
