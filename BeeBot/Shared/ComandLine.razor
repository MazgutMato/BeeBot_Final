@inject ControllerCommands controllerCommands

			@*end of game*@
				@if (this.StateOfGame == true)
				{
					<div class="card m-3 border border-3 border-dark bg-success">
						<div class="card-body border-3 border-dark">
							<div class="row d-flex justify-content-center p-1">
								Úspešne si prešiel mapou!
							</div>
						</div>
					</div>
				} else if (this.StateOfGame == false)
				{
					<div class="card m-3 border border-3 border-dark bg-danger">
						<div class="card-body border-3 border-dark">
							<div class="row d-flex justify-content-center p-1">
								Skús to znovu!
							</div>
						</div>	
					</div>
				}

			@*command panel*@
			<div class="card m-3 border border-3 border-dark">			
				<div class="card-body border-bottom border-3 border-dark">
					<div class="row d-flex justify-content-center p-1">
						Zadaj prikazy
					</div>
				</div>
				<div class="card-body border-bottom border-3 border-dark">
					<div class="row d-flex p-3 justify-content-center">
						<img src="images/commands/rotate_left.svg" class="command command_pick" @onclick="() => controllerCommands.addCommand(Command.rotateLeft)"/>
						<img src="images/commands/up.svg" class="command command_pick" @onclick="() => controllerCommands.addCommand(Command.moveForward)"/>
						<img src="images/commands/down.svg" class="command command_pick" @onclick="() => controllerCommands.addCommand(Command.moveBack)"/>
						<img src="images/commands/rotate_right.svg" class="command command_pick" @onclick="() => controllerCommands.addCommand(Command.rotateRight)"/>
					</div>
					<div class="row d-flex p-3 justify-content-center">
						<img src="images/commands/playl.svg" class="command command_pick" @onclick="() => {
							if (controllerCommands.CancellationToken == null)
								this.runProgram();
							}"/>
						<img src="images/commands/stop.svg" class="command command_pick" @onclick="() => {
							controllerCommands.stopAnimation();
							this.StateOfGame = null;
							}"/>
						<img src="images/commands/trash.svg" class="command command_pick" @onclick="() => {
							controllerCommands.deleteCommands();
							this.StateOfGame = null;
							}"/>
					</div>
				</div>
				<div class="card-body">
					<div class="row d-flex justify-content-center p-1">
						Zadane prikazy
					</div>
					@if(controllerCommands.Commands.Any()){
						<div class="row d-flex justify-content-center card-body">
						@foreach (Command command in controllerCommands.Commands){
							switch (command)
							{
								case Command.moveForward:
									<img src="images/commands/up.svg" class="command"/>
									break;
								case Command.moveBack:
									<img src="images/commands/down.svg" class="command"/>
									break;
								case Command.rotateLeft:
									<img src="images/commands/rotate_left.svg" class="command"/>
									break;
								case Command.rotateRight:
									<img src="images/commands/rotate_right.svg" class="command"/>
									break;               
							}
						}
						</div>
					}
				</div>
			</div>

@code {
	public bool? StateOfGame { get; set; }

	async Task runProgram()
	{
		this.StateOfGame = null;
		this.StateOfGame =  await controllerCommands.startAnimationAsync();
		this.StateHasChanged();
	}

}